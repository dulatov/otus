sudo -i
yum check-update
# Устанавливаем пакетв
yum install -y yum-utils
yum install -y epel-release
yum install -y nginx
yum install -y httpd
yum install -y wget
yum install -y nano
yum install -y unzip
yum install -y mc
sudo rpm -Uhv https://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum-config-manager --enable remi-php71
sudo yum  install -y php-fpm php-cli php-gd php-opcache php-mysqlnd php-json php-mcrypt php-xml php-curl


# Устанавливаем MySQL
rpm -Uvh https://repo.mysql.com/mysql80-community-release-el7-5.noarch.rpm
yum --enablerepo=mysql80-community install mysql-community-server


# установка мониторинга
mkdir /etc/prometheus
mkdir /var/lib/prometheus
cd /etc/prometheus
wget https://github.com/prometheus/prometheus/releases/download/v2.39.1/prometheus-2.39.1.linux-amd64.tar.gz
tar -xf prometheus-2.39.1.linux-amd64.tar.gz
cd prometheus-2.39.1.linux-amd64
cp prometheus promtool /usr/local/bin/
cp -r console_libraries consoles prometheus.yml /etc/prometheus
useradd --no-create-home --shell /bin/false prometheus
chown -R prometheus:prometheus /etc/prometheus /var/lib/prometheus


# Автозапуск Nginx
systemctl enable nginx

# Автозапуск Apache
systemctl enable httpd

# Отключаем firewalld
systemctl disable firewalld

# Ставим в автозагрузку
systemctl start mysqld
systemctl enable mysqld

# Выясняем временный пароль
grep "A temporary password" /var/log/mysqld.log

# Заходим с паролем
mysql -uroot -p
use mysql;
# Устанавливаем пароль
ALTER USER 'root'@'localhost' IDENTIFIED WITH 'caching_sha2_password' BY 'AmanAzamat20';

# Создаём пользователя для реплики
CREATE USER repl@'%' IDENTIFIED WITH 'caching_sha2_password' BY 'AmanAzamat20'; 
# Даём ему права на репликацию
GRANT REPLICATION SLAVE ON *.* TO repl@'%';
#выходим из mysql
exit;

#git установка 

yum -y install git
#выходим в домашнюю директорию пользователя
exit
#генерация ключей
ssh-keygen
#после ввода, нажать несолько раз ввод, до появления ключа
cat ~/.ssh/id_rsa.pub

mkdir repo
cd repo
#подключить github.com пароль как mysql https://github.com/dulatov/otus/settings/keys
#имя дать otus скопировать ключ выше, поставить галку Allow write access

echo "# otus" >> README.md
git init
git add README.md

git config --global user.name "Melis Dulatov"
git config --global user.email melis.dulatov@gmail.com
git config --global core.editor nano

git branch -M main
git remote add origin
git commit -m "first commit"
# Добавление в индекс (stage)
git add README.md


# Просмотр проиндексированных изменений
git diff --cached
git push -u origin main
git remote add origin git@github.com:dulatov/otus.git

sudo -i
# Ставим имя хоста
hostnamectl set-hostname mysql-master

#Выключаем для клопирования
shutdown

#на клонированой машине меняюем имя
sudo -i
hostnamectl set-hostname mysql-slave

#удаляем на hostname mysql-slave
rm /var/lib/mysql/auto.cnf
#увеличиваем server_id = 2
nano /etc/my.cnf
#рестарт после перименования
reboot

#просмотр mysql-master
sudo -i
mysql -u
use mysql;
SHOW MASTER STATUS;
exit;

#просмотр mysql-slave
sudo -i
mysql -u
use mysql;
# необходимо получить публичный ключ
STOP SLAVE;
CHANGE MASTER TO MASTER_HOST='192.168.140.137', MASTER_USER='repl', MASTER_PASSWORD='AmanAzamat20', MASTER_LOG_FILE='binlog.000003', MASTER_LOG_POS=1013, GET_MASTER_PUBLIC_KEY = 1;
START SLAVE;
show slave status\G
show variables like '%relay%';
exit;

#зоздание БД на  mysql-master
sudo -i
mysql -u
CREATE DATABASE joomla;
GRANT ALL PRIVILEGES ON joomla.* TO 'joomla'@'localhost' IDENTIFIED BY 'AmanAzamat20';
FLUSH PRIVILEGES;
EXIT;
FLUSH PRIVILEGES;

## Установка jumla
# скачиваем на mysql-master
sudo -i
wget https://downloads.joomla.org/us/cms/joomla3/3-8-5/Joomla_3-8-5-Stable-Full_Package.zip

unzip -d /var/www/html Joomla_3-8-12-Stable-Full_Package.zip?format=zip


#изменить порт httpd
sudo nano /etc/httpd/conf/httpd.conf
Listen = 8080


# изменить nginx добавить

# Balance server 
sudo nano /etc/nginx/nginx.conf

upstream backend {
	server 192.168.140.137:8080 weight=2;
	server 192.168.140.138:8080;
}
#добавить proxy_pass http://backend; в location / {
server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;

        include /etc/nginx/default.d/*.conf;

		location / {
			#try_files $uri $uri/ =404;
			proxy_pass http://backend;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Real-IP $remote_addr;
		}

		location ~ \.php$ {
			include fastcgi_params;
			root /var/www/html;

			fastcgi_pass unix:/run/php/php7.4-fpm.sock;
			#fastcgi_pass 127.0.0.1:9000;
		}


sudo nano /etc/php-fpm.d/www.conf
#заменить apache на nginx
#user = nginx
#group = nginx

chown -R root:nginx /var/lib/php




